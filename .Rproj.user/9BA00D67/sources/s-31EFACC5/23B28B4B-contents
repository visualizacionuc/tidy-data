---
title: "<div id=\"brand\">t|1i|2d|3y|1</div><div id=\"brand\">d|1a|2t|1a|1</div>"
author: "<div id=\"subbrand\">Joshua Kunst + Pachá, Mayo 2018</div>"
output:
  revealjs::revealjs_presentation:
    self_contained: false
    reveal_plugins: ["zoom"]
    mathjax: null
    transition: fade
    css: ["css/styles.css"]
    incremental: true
    center: false
    # center: true
    theme: simple
    fig_width: 6
    fig_height: 3.5
    reveal_options:
      slideNumber: true
      controls: false
      mouseWheel: false
editor_options: 
  chunk_output_type: console
---

```{r, include = FALSE}
source("R/setup.R")
```

## ¿Qué haremos?

> - Explorar, **ordenar**, graficar y agregar datos
> - Mediante ejemplos sentar las bases para trabajar **mejor**
> - Perder el miedo a **R**

# Introducción { .center .white data-background="#2f549e"}

## Introducción

Seguimos con el mismo flujo de datos:

![](img/datapipeline.png)

## Repaso clase anterior

No puedo __explicar__ sin __entender__

<span class="fragment">
El Análisis __Exploratorio__ y la 
Estadística __Descriptiva__ son parte clave 
para el entendimiento</span>

<span class="fragment">`r ico("quote-left")` Escuchar lo que los datos nos hablan</span>

## Conceptos

> - Una __variable__ es una cantidad, que puede ser medida: estatura, magnitud
de un sismo, velocidad de un huracán, etc
> - Un __valor__ es un estado de la variable cuando se mide: 1.20 metros, 8° Richter
> - Una __observación__ o __caso__  es un conjunto de mediciones -no de la misma
variable necesariamente- pero si en un mismo instante y a un mismo objeto.

## Conceptos

> - __Datos tabulados__ es un conjunto de _valores_ cada uno asociado
a una _variable_ y una _observación_

![](img/tidydata.png)

## Conceptos

**Análisis Exploratorio de Datos**

- Generar preguntas acerca de los datos
- Buscar respuestas visualizando, transformando los datos
- Hacer nuevas preguntas a partir de lo aprendido

<span class="fragment">__Generar conocimiento__</span>

# Lluvias en la RM { .center .white data-background="#2f549e"}

## Lluvias en la RM

- Cada observación es un registro diario
- Todas las mediciones están registradas en milimetros

# Manipulación de datos { .center .white data-background="#2f549e"}

## Ejercicio 1

- Carga el Tidyverse
- Carga los datos
- ¿Cumple esto con Tidy Data?
- De no cumplir el criterio ordena los datos

## Solución Ejercicio 1

```{r lluvias1}
library(tidyverse)
library(readxl)

precipitaciones_bruto <- read_excel("data/lluvias.xlsx")
precipitaciones_bruto
```

## Solución Ejercicio 1

No cumple con Tidy Data, por lo tanto hay que ordenar

```{r lluvias2}
precipitaciones_ordenado <- precipitaciones_bruto %>% 
  gather(anio, precipitacion, -fecha) 

precipitaciones_ordenado
```

## Solución Ejercicio 1

¿Puede mejorar? Sí, se puede simplificar

```{r lluvias3}
library(lubridate)

precipitaciones_ordenado <- precipitaciones_ordenado %>% 
  mutate(dia = day(fecha),
         mes = month(fecha),
         anio = str_sub(anio, 3, 6)) %>% 
  mutate(dia = ifelse(nchar(dia) == 1, paste0("0", dia), dia),
         mes = ifelse(nchar(mes) == 1, paste0("0", mes), mes),
         anio = as.integer(anio)) %>% 
  unite(fecha, anio, mes, dia, sep = "-", remove = F) %>% 
  mutate(fecha = ymd(fecha)) %>% 
  select(fecha, anio, precipitacion)
```

## Solución Ejercicio 1

Resultado final

```{r lluvias4}
precipitaciones_ordenado
```

## Ejercicio 2

Filtra los datos a partir del año 2000

## Solución Ejercicio 2

```{r lluvias5}
precipitaciones_ordenado %>% 
  filter(anio >= 2000)
```

## Ejercicio 3

Filtra las precipitaciones mayores o iguales a 50mm

## Solución Ejercicio 3

```{r lluvias6}
precipitaciones_ordenado %>% 
  filter(precipitacion >= 50)
```

## Ejercicio 4

Crea una nueva tabla con las precipitaciones mayores a cero

## Solución Ejercicio 4

```{r lluvias7}
precipitaciones_ordenado_2 <- precipitaciones_ordenado %>% 
  filter(precipitacion > 0)

precipitaciones_ordenado_2
```

# Graficar datos { .center .white data-background="#2f549e"}

## Ejercicio 5

Grafica la serie de precipitaciones a partir del ejercicio anterior

## Solución Ejercicio 5

```{r lluvias8}
g1 <- precipitaciones_ordenado_2 %>% 
  ggplot(aes(x = fecha, y = precipitacion, color = precipitacion)) +
    geom_line()

g1
```

## Ejercicio 6

Agrega una línea horizontal para mostrar claramente los registros que superan los 50 mm diarios

## Solución Ejercicio 6

```{r lluvias9}
g1 <- g1 +
  geom_hline(yintercept = 50, color = "red", linetype = "dashed")

g1
```

## Ejercicio 7

- Agrega el texto "50mm" a la línea de corte (al lado derecho)
- Remueve la leyenda
- Usa el tema `white`

## Solución Ejercicio 7

```{r lluvias10}
fmax <- max(precipitaciones_ordenado_2$fecha)

g1 <- g1 + 
  annotate("text", fmax, 50, vjust = -1, label = "50 mm") +
  theme(legend.position = "none") + theme_bw()

g1
```

## Ejercicio 8

- Agrega etiquetas a los ejes del gráfico
- Usa las fechas mínima y máxima como límites del eje x
- Agrega algunas fechas como referencia (i.e intervalos de 5 años o 1825 días)
- Agrega título

## Solución Ejercicio 8

```{r lluvias11}
fmin <- min(precipitaciones_ordenado_2$fecha)

g1 <- g1 + 
  labs(y = "milimetros de lluvia", x = "año") +
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  scale_x_date(date_labels =  "%d-%m-%Y", 
               limits = c(fmin, fmax), 
               breaks = c(fmin, fmin + seq(1825,1825*8,1000), fmax)) +
  ggtitle("Precipitaciones registradas en la RM desde 1971")
```

## Solución Ejercicio 8

```{r lluvias12}
g1
```

## Ejercicio 9

- Usa `facets_wrap` para crear mini gráficos para los años 2009 - 2012
- Recuerda incluir etiquetas en los ejes y título

## Solución Ejercicio 9

```{r lluvias13, eval = FALSE}
precipitaciones_ordenado_2 %>% 
  filter(anio >= 2009 & anio <= 2012) %>% 
  ggplot(aes(x = fecha, y = precipitacion, color = anio)) +
  geom_col() +
  facet_wrap("anio", scales = "free_x", ncol = 4) +
  theme_bw() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(y = "milimetros de lluvia", x = "año") +
  ggtitle("Precipitaciones registradas en la RM 2009-2012")
```

## Solución Ejercicio 9

```{r lluvias14, echo = FALSE}
precipitaciones_ordenado_2 %>% 
  filter(anio >= 2009 & anio <= 2012) %>% 
  ggplot(aes(x = fecha, y = precipitacion, color = anio)) +
  geom_col() +
  facet_wrap("anio", scales = "free_x", ncol = 4) +
  theme_bw() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(y = "milimetros de lluvia", x = "año") +
  ggtitle("Precipitaciones registradas en la RM 2009-2012")
```

## Ejercicio 10

- Obten la suma de precipitaciones por mes en un año a tu elección
- Grafica los resultados

## Solución Ejercicio 10

```{r lluvias15, eval = FALSE}
precipitaciones_ordenado %>% 
  filter(anio == 2012) %>% 
  mutate(mes = month(fecha, label = TRUE)) %>% 
  group_by(mes) %>% 
  summarise(pmes = sum(precipitacion)) %>% 
  ggplot(aes(x = mes, y = pmes)) +
  geom_col() +
  theme_bw() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(y = "milimetros de lluvia", x = "año") +
  ggtitle("Precipitaciones registradas en la RM en 2012")
```

## Solución Ejercicio 10

```{r lluvias16, echo = FALSE}
precipitaciones_ordenado %>% 
  filter(anio == 2012) %>% 
  mutate(mes = month(fecha, label = TRUE)) %>% 
  group_by(mes) %>% 
  summarise(pmes = sum(precipitacion)) %>% 
  ggplot(aes(x = mes, y = pmes, fill = pmes)) +
  geom_col() +
  theme_bw() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(y = "milimetros de lluvia", x = "año") +
  ggtitle("Precipitaciones registradas en la RM en 2012")
```

# Dudas { .center .white data-background="#2f549e"}
