install.packages("revealjs")
if (!require(pacman)) install.packages("pacman")
p_load(tidyverse, viridis, scales, stringr, gridExtra, ggbeeswarm)
p_load_gh("jbkunst/jbkmisc")
p_load_gh("jbkunst/jbkmisc")
if (!require(pacman)) install.packages("pacman")
p_load(tidyverse, viridis, scales, stringr, gridExtra, ggbeeswarm)
p_load_gh("jbkunst/jbkmisc")
if (!require(pacman)) install.packages("pacman")
p_load(tidyverse, viridis, scales, stringr, gridExtra, ggbeeswarm)
p_load_gh("jbkunst/jbkmisc")
if (!require(pacman)) install.packages("pacman")
p_load(tidyverse, viridis, scales, stringr, gridExtra, ggbeeswarm)
p_load_gh("jbkunst/jbkmisc")
365*5
legos <- read_csv("https://raw.githubusercontent.com/seankross/lego/master/data-tidy/legosets.csv")
library(tidyverse)
legos <- read_csv("https://raw.githubusercontent.com/seankross/lego/master/data-tidy/legosets.csv")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_viridis(option = "A") +
scale_y_sqrt(name = "Precio USD", labels = dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = comma, limits = c(0, 2000))
install.packages("ggplot2")
install.packages("ggplot2")
library(tidyverse)
legos <- read_csv("https://raw.githubusercontent.com/seankross/lego/master/data-tidy/legosets.csv")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_viridis(option = "A") +
scale_y_sqrt(name = "Precio USD", labels = dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color() +
scale_y_sqrt(name = "Precio USD", labels = dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_continuous() +
scale_y_sqrt(name = "Precio USD", labels = dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_continuous() +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
library(tidyverse)
legos <- read_csv("https://raw.githubusercontent.com/seankross/lego/master/data-tidy/legosets.csv")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_continuous() +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_fill_viridis_c() +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_continuous(low = "gray", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_continuous(low = "yellow", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_colour_gradient2(low = "blue", mid = "yellow", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_colour_gradient2(low = "blue", midpoint = "yellow", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_colour_gradient(low = "blue", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_colour_gradient(low = "green", high = "red") +
scale_y_sqrt(name = "Precio USD", labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(name = "Piezas", labels = scales::comma, limits = c(0, 2000))
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_colour_gradient(low = "green", high = "red") +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_fill_gradientn(values = c("red", "yellow", "blue")) +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_fill_gradientn(colours = c("red", "yellow", "blue")) +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_gradientn(colours = c("red", "yellow", "blue")) +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
viridisLite::viridis(3)
viridisLite::viridis(3) %>% dput
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.7) +
scale_color_gradientn(colours = c("#440154", "#21908C", "#FDE725")) +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
install.packages(c("rgexf", "ggnetwork", "intergraph"))
library(rvest)
read_html("http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html") %>%
html_node("img") %>%
html_attr("src")
read_html("http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html") %>%
html_nodes("img") %>%
html_attr("src")
library(tidyverse)
library(rvest)
url <- "http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html"
url <- "http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html"
html <- read_html(url)
html %>%
html_nodes("img") %>%
html_attr("src") %>%
file.path(basename(url), .)
basename(url)
html %>%
html_nodes("img") %>%
html_attr("src") %>%
file.path(dirname(url), .)
html %>%
html_nodes("img") %>%
html_attr("src") %>%
file.path(dirname(url), .) %>%
map(function(x){
download.file(x, file.path("img/charts", basename(x)))
})
dir.create("img/charts")
html %>%
html_nodes("img") %>%
html_attr("src") %>%
file.path(dirname(url), .) %>%
map(function(x){
download.file(x, file.path("img/charts", basename(x)))
})
html %>%
html_nodes("img") %>%
html_attr("src") %>%
file.path(dirname(url), .) %>%
map(function(x){
download.file(x, file.path("img/charts", basename(x)), mode = 'wb')
})
legos2 <- filter(legos, Theme2 != "Other")
legos
legos3 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 15)) %>%
filter(Theme2 != "Other")
legos3 %>%
count(Theme)
legos2 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 15)) %>%
filter(Theme2 != "Other")
legos2
legos2 <- count(legos, theme, sort = TRUE) %>% head(4)
legos2
legos2 <- count(legos, theme, sort = TRUE) %>% head(4)
legos2
legos2 <- count(legos, Thene, sort = TRUE) %>% head(4)
legos2
legos2 <- count(legos, Theme, sort = TRUE) %>% head(4)
legos2
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
grid.arrange(p1, p2, nrow = 1)
gridExtra::grid.arrange(p1, p2, nrow = 1)
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
# Chunk 1
source("R/setup.R")
knitr::opts_chunk$set(
fig.path = "img/clase00/",
echo = FALSE,
fig.width = 10,
fig.height = 6
)
# Chunk 2: plot1
library(tidyverse)
legos <- read_csv("https://raw.githubusercontent.com/seankross/lego/master/data-tidy/legosets.csv")
ggplot(legos) +
geom_point(aes(Pieces, USD_MSRP, size = Minifigures, color = Year), alpha = 0.5) +
scale_color_gradientn(colours = c("#440154", "#21908C", "#FDE725")) +
scale_y_sqrt(labels = scales::dollar, limits = c(0, 300)) +
scale_x_sqrt(labels = scales::comma, limits = c(0, 2000)) +
labs(title = "Distribución de Set de Legos", x = "Piezas", y = "Precio USD")
# Chunk 3: plot2
# install.packages(c("rgexf", "ggnetwork", "intergraph"))
library(igraph)
library(rgexf)
library(stringr)
library(ggnetwork)
library(ggrepel)
net <- "http://media.moviegalaxies.com/gexf/92.gexf" %>%
read_lines() %>%
read.gexf() %>%
gexf.to.igraph()
V(net)$name <- str_to_title(V(net)$name)
V(net)$label <- V(net)$name %>%
str_extract_all("^\\w{2}| \\w") %>%
map_chr(function(x) {
x %>% unlist() %>% str_c(collapse = "")
})
V(net)$size <- page.rank(net)$vector
cl <- cluster_fast_greedy(net)
V(net)$comm <- membership(cl)
V(net)$color <- V(net)$comm
# head(ggnetwork(net))
set.seed(123)
ggnet <- ggnetwork(net)
dfnet2 <- ggnet %>%
as.matrix() %>%
as.data.frame() %>%
tbl_df() %>%
select(x, y, vertex.names, weight, size) %>%
mutate_all(as.character) %>%
mutate_at(vars(x, y, weight, size), as.numeric) %>%
filter(is.na(weight))
ggplot(ggnet) +
geom_edges(aes(x, y, size = width, color = factor(comm),
xend = xend, yend = yend), color = "gray", size = 1) +
geom_point(aes(x, y, size = size, color = factor(comm))) +
geom_text_repel(aes(x, y, label = vertex.names, size = size),
data = dfnet2, color = "#666666",
family = "Roboto Condensed") +
scale_color_viridis(discrete = TRUE) +
theme_blank() +
labs(size = "Pagerank", color = "Comunidad")
# Chunk 4
data1 <- read_delim("data/showmethenumbers.txt", delim = "\t") %>%
mutate(region = factor(region, levels = c("sur", "norte", "este", "oeste")))
titulo <- "La región del sur exhibe el mayor crecimiento"
data1 %>%
spread(cuarto, valor) %>%
arrange(region) %>%
knitr::kable()
# Chunk 5
p1 <- ggplot(data1) +
geom_col(aes(cuarto, valor, group = region, fill = region),
color = "gray80", position = "dodge") +
scale_fill_viridis(discrete = TRUE, end = 0.80)
p1 + labs(title = titulo)
# Chunk 6
p2 <- ggplot(data1) +
geom_col(aes(region, valor, group = cuarto, fill = region),
color = "gray80", position = "dodge") +
scale_fill_viridis(discrete = TRUE, end = 0.80)
p2 + labs(title = titulo)
# Chunk 7
p3 <- data1 %>%
mutate(ind = as.numeric(region == "sur")) %>%
ggplot() +
geom_line(aes(cuarto, valor, group = region, alpha = ind, color = region), size = 2) +
scale_y_continuous(limits = c(0, NA)) +
scale_alpha(range = c(0.5, 1), guide = FALSE) +
scale_color_viridis(discrete = TRUE, end = 0.80)
p3 + labs(title = titulo)
# Chunk 8
gridExtra::grid.arrange(
p1 + theme_null(),
p2 + theme_null(),
p3 + theme_null() + scale_y_continuous(limits = c(NA, NA)),
nrow = 1)
# Chunk 9
legos2 <- count(legos, Theme, sort = TRUE) %>% head(4)
legos2
legos3 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 15)) %>%
filter(Theme2 != "Other")
legos3 %>%
count(Theme)
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
legos2 <- count(legos, Theme, sort = TRUE) %>% head(4)
p1 <- ggplot(legos2) +
geom_col(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_col(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
legos2 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 4)) %>%
filter(Theme2 != "Other")
legos2
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
legos2 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 3)) %>%
filter(Theme2 != "Other")
legos2 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 3)) %>%
filter(Theme2 != "Other")
p1 <- ggplot(legos2) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos2) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
legos2 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 10)) %>%
filter(Theme2 != "Other")
legos2
legos2 %>%
count(Theme)
legos3 <- legos %>%
mutate(Theme2 = fct_lump(Theme, n = 14)) %>%
filter(Theme2 != "Other")
legos3
legos3 %>%
count(Theme)
bind_cols(
legos3 %>% count(Theme) %>% head(7),
legos3 %>% count(Theme) %>% tail(7)
)
p1 <- ggplot(legos3) +
geom_bar(aes(Theme, fill = Theme)) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
theme_null() +
xlab(NULL) + ylab(NULL)
p2 <- ggplot(legos3) +
geom_bar(aes(x = factor(1), fill = Theme), width = 1) +
viridis::scale_fill_viridis(discrete = TRUE, option = "B") +
coord_polar(theta = "y") +
theme_null()
gridExtra::grid.arrange(p1, p2, nrow = 1)
